name: Frontend CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build React App
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: package-lock.json  # relative to working-directory

      - name: Install dependencies
        run: npm ci

      - name: Run Lint
        run: npm run lint --if-present

      - name: Run Jest Tests
        run: npm test -- --watchAll=false --ci --coverage
        # this will fail the pipeline if tests fail

      - name: Build
        run: npm run build

      - name: Upload production-ready build
        uses: actions/upload-artifact@v4
        with:
          name: react-build
          path: ./build

  deploy:
    name: Build & Push Docker Image
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        working-directory: ./frontend
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME=ghcr.io/$OWNER/react-frontend

          docker buildx build \
            --platform linux/amd64 \
            -t $IMAGE_NAME:latest \
            -t $IMAGE_NAME:${{ github.sha }} \
            --push .
