name: Laravel CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DB_HOST: 127.0.0.1
  DB_PORT: 5432
  DB_DATABASE: customer_satisfaction
  DB_USERNAME: sami
  DB_PASSWORD: sami
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/laravel-app

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    services:
      pgsql:
        image: postgres:17-alpine
        env:
          POSTGRES_DB: ${{ env.DB_DATABASE }}
          POSTGRES_USER: ${{ env.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('backend/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: pdo, pdo_pgsql, mbstring, exif, pcntl, gd
          coverage: none

      - name: Install dependencies
        run: |
          composer install --no-interaction --prefer-dist --optimize-autoloader
          cp .env.example .env
          php artisan key:generate

      - name: Run tests
        run: |
          php artisan config:clear
          php artisan test
  deploy:
    name: Deploy to Production
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            image=moby/buildkit:master
            network=host

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push to GHCR
        working-directory: ./backend
        run: |
          # Convert everything to lowercase
          IMAGE_NAME=ghcr.io/$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')/laravel-app
          
          docker buildx build \
            --platform linux/amd64 \
            -t $IMAGE_NAME:latest \
            -t $IMAGE_NAME:${{ github.sha }} \
            --push .


  # deploy:
    # name: Deploy to Production
    # needs: test
    # runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/main'
    
    # steps:
    #   - uses: actions/checkout@v4

    #   - name: Set up Docker Buildx
    #     uses: docker/setup-buildx-action@v2
    #     with:
    #       driver-opts: |
    #         image=moby/buildkit:master
    #         network=host

    #   - name: Login to Docker Hub
    #     uses: docker/login-action@v3
    #     with:
    #       registry: docker.io
    #       username: ${{ secrets.DOCKER_USERNAME }}
    #       password: ${{ secrets.DOCKER_PASSWORD }}

    #   - name: Prepare Docker cache
    #     run: mkdir -p /tmp/.buildx-cache

    #   - name: Build and push
    #     working-directory: ./backend
    #     run: |
    #       docker buildx build \
    #         --platform linux/amd64 \
    #         --cache-from type=local,src=/tmp/.buildx-cache \
    #         --cache-to type=local,dest=/tmp/.buildx-cache-new \
    #         -t ${{ env.DOCKER_IMAGE }}:latest \
    #         -t ${{ env.DOCKER_IMAGE }}:${{ github.sha }} \
    #         --push .
          
    #       # Update cache
    #       rm -rf /tmp/.buildx-cache
    #       mv /tmp/.buildx-cache-new /tmp/.buildx-cache