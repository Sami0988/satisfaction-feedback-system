name: Laravel CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DB_HOST: 127.0.0.1
  DB_PORT: 5432
  DB_DATABASE: customer_satisfaction
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

# Required for GHCR access
permissions:
  contents: read
  packages: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    services:
      pgsql:
        image: postgres:17-alpine
        env:
          POSTGRES_DB: ${{ env.DB_DATABASE }}
          POSTGRES_USER: ${{ env.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('backend/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          extensions: pdo, pdo_pgsql, mbstring, exif, pcntl, gd
          coverage: none

      - name: Install dependencies
        run: |
          ccomposer install --no-interaction --prefer-dist --optimize-autoloader --no-scripts
          cp .env.example .env
          php artisan key:generate

      - name: Run tests
        run: |
          php artisan config:clear
          php artisan test

  deploy:
    name: Deploy to GHCR
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    env:
      APP_ENV: production
      APP_DEBUG: false
      SWAGGER_ENABLE: ${{ secrets.SWAGGER_ENABLE }}
      L5_SWAGGER_GENERATE_ALWAYS: ${{ secrets.L5_SWAGGER_GENERATE_ALWAYS }}
      DB_HOST: 127.0.0.1
      DB_PORT: 5432
      DB_DATABASE: customer_satisfaction
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            image=moby/buildkit:master
            network=host

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Build and push Docker image
        working-directory: ./backend
        run: |
          # Repository info
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME=ghcr.io/$OWNER/laravel-app

          # Build without cache first to ensure it works
          docker buildx build \
            --platform linux/amd64 \
            --build-arg APP_ENV=$APP_ENV \
            --build-arg APP_DEBUG=$APP_DEBUG \
            --build-arg SWAGGER_ENABLE=$SWAGGER_ENABLE \
            --build-arg L5_SWAGGER_GENERATE_ALWAYS=$L5_SWAGGER_GENERATE_ALWAYS \
            -t $IMAGE_NAME:latest \
            -t $IMAGE_NAME:${{ github.sha }} \
            --push .