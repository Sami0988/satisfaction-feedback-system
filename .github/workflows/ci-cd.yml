name: Laravel CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BACKEND_DIR: backend
  COMPOSER_NO_INTERACTION: 1

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: sami
          POSTGRES_PASSWORD: sami
          POSTGRES_DB: customer_satisfaction
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # 1. Checkout and setup
      - uses: actions/checkout@v4
      
      # 2. Clean up any conflicts
      - name: Clear port conflicts
        run: |
          sudo systemctl stop postgresql || true
          docker rm -f $(docker ps -aq --filter "publish=5432") || true

      # 3. Start only non-database services
      - name: Start Laravel services
        working-directory: ${{ env.BACKEND_DIR }}
        run: |
          docker compose up -d --build nginx laravel.test
          docker compose run --rm laravel.test php artisan key:generate

      # 4. Wait for PostgreSQL
      - name: Verify PostgreSQL
        run: |
          timeout 20 bash -c 'until pg_isready -h localhost -p 5432; do sleep 2; done'

      # 5. Database setup with CI credentials
      - name: Setup database
        working-directory: ${{ env.BACKEND_DIR }}
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USERNAME: sami
          DB_PASSWORD: sami
          DB_DATABASE: customer_satisfaction
        run: |
          docker compose run --rm laravel.test php artisan migrate:fresh --seed
          docker compose run --rm laravel.test php artisan storage:link

      # 6. Install dependencies
      - name: Install dependencies
        working-directory: ${{ env.BACKEND_DIR }}
        run: docker compose run --rm laravel.test composer install --no-interaction --prefer-dist

      # 7. Run tests
      - name: Run tests
        working-directory: ${{ env.BACKEND_DIR }}
        run: docker compose run --rm laravel.test php artisan test

      # 8. Push to Docker Hub
      - name: Push to Docker Hub
        if: github.ref == 'refs/heads/main'
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker compose push